# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-03 06:24
from __future__ import unicode_literals

import autoslug.fields
from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import taggit_autosuggest.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('location', '0001_initial'),
        ('designation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobSeeker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(blank=True, max_length=20, null=True)),
                ('resume2', models.CharField(blank=True, max_length=15, null=True)),
                ('name', models.CharField(max_length=60)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('work_exp', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6, null=True)),
                ('analytics_in_exp', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=6, null=True)),
                ('nearest_city', models.CharField(blank=True, max_length=250, null=True)),
                ('preferred_location', models.CharField(blank=True, max_length=250, null=True)),
                ('ctc', models.CharField(blank=True, max_length=20, null=True)),
                ('current_employer', models.CharField(blank=True, max_length=150, null=True)),
                ('ug_course', models.TextField(blank=True, null=True)),
                ('ug_course2', models.TextField(blank=True, null=True)),
                ('ug_institute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tier1', models.NullBooleanField(default=False)),
                ('ug_passing_year', models.CharField(blank=True, choices=[(b'2049', b'2049'), (b'2048', b'2048'), (b'2047', b'2047'), (b'2046', b'2046'), (b'2045', b'2045'), (b'2044', b'2044'), (b'2043', b'2043'), (b'2042', b'2042'), (b'2041', b'2041'), (b'2040', b'2040'), (b'2039', b'2039'), (b'2038', b'2038'), (b'2037', b'2037'), (b'2036', b'2036'), (b'2035', b'2035'), (b'2034', b'2034'), (b'2033', b'2033'), (b'2032', b'2032'), (b'2031', b'2031'), (b'2030', b'2030'), (b'2029', b'2029'), (b'2028', b'2028'), (b'2027', b'2027'), (b'2026', b'2026'), (b'2025', b'2025'), (b'2024', b'2024'), (b'2023', b'2023'), (b'2022', b'2022'), (b'2021', b'2021'), (b'2020', b'2020'), (b'2019', b'2019'), (b'2018', b'2018'), (b'2017', b'2017'), (b'2016', b'2016'), (b'2015', b'2015'), (b'2014', b'2014'), (b'2013', b'2013'), (b'2012', b'2012'), (b'2011', b'2011'), (b'2010', b'2010'), (b'2009', b'2009'), (b'2008', b'2008'), (b'2007', b'2007'), (b'2006', b'2006'), (b'2005', b'2005'), (b'2004', b'2004'), (b'2003', b'2003'), (b'2002', b'2002'), (b'2001', b'2001'), (b'2000', b'2000'), (b'1999', b'1999'), (b'1998', b'1998'), (b'1997', b'1997'), (b'1996', b'1996'), (b'1995', b'1995'), (b'1994', b'1994'), (b'1993', b'1993'), (b'1992', b'1992'), (b'1991', b'1991'), (b'1990', b'1990'), (b'1989', b'1989'), (b'1988', b'1988'), (b'1987', b'1987'), (b'1986', b'1986'), (b'1985', b'1985'), (b'1984', b'1984'), (b'1983', b'1983'), (b'1982', b'1982'), (b'1981', b'1981'), (b'1980', b'1980'), (b'1979', b'1979'), (b'1978', b'1978'), (b'1977', b'1977'), (b'1976', b'1976'), (b'1975', b'1975'), (b'1974', b'1974'), (b'1973', b'1973'), (b'1972', b'1972'), (b'1971', b'1971'), (b'1970', b'1970'), (b'1969', b'1969'), (b'1968', b'1968'), (b'1967', b'1967'), (b'1966', b'1966'), (b'1965', b'1965'), (b'1964', b'1964'), (b'1963', b'1963'), (b'1962', b'1962'), (b'1961', b'1961'), (b'1960', b'1960'), (b'1959', b'1959'), (b'1958', b'1958'), (b'1957', b'1957'), (b'1956', b'1956'), (b'1955', b'1955'), (b'1954', b'1954'), (b'1953', b'1953'), (b'1952', b'1952'), (b'1951', b'1951'), (b'1950', b'1950')], max_length=100, null=True)),
                ('pg_course', models.CharField(blank=True, max_length=100, null=True)),
                ('correct_pg_course', models.CharField(blank=True, max_length=100, null=True)),
                ('pg_institute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('pg_tier1', models.NullBooleanField(default=False)),
                ('pg_passing_year', models.CharField(blank=True, choices=[(b'2049', b'2049'), (b'2048', b'2048'), (b'2047', b'2047'), (b'2046', b'2046'), (b'2045', b'2045'), (b'2044', b'2044'), (b'2043', b'2043'), (b'2042', b'2042'), (b'2041', b'2041'), (b'2040', b'2040'), (b'2039', b'2039'), (b'2038', b'2038'), (b'2037', b'2037'), (b'2036', b'2036'), (b'2035', b'2035'), (b'2034', b'2034'), (b'2033', b'2033'), (b'2032', b'2032'), (b'2031', b'2031'), (b'2030', b'2030'), (b'2029', b'2029'), (b'2028', b'2028'), (b'2027', b'2027'), (b'2026', b'2026'), (b'2025', b'2025'), (b'2024', b'2024'), (b'2023', b'2023'), (b'2022', b'2022'), (b'2021', b'2021'), (b'2020', b'2020'), (b'2019', b'2019'), (b'2018', b'2018'), (b'2017', b'2017'), (b'2016', b'2016'), (b'2015', b'2015'), (b'2014', b'2014'), (b'2013', b'2013'), (b'2012', b'2012'), (b'2011', b'2011'), (b'2010', b'2010'), (b'2009', b'2009'), (b'2008', b'2008'), (b'2007', b'2007'), (b'2006', b'2006'), (b'2005', b'2005'), (b'2004', b'2004'), (b'2003', b'2003'), (b'2002', b'2002'), (b'2001', b'2001'), (b'2000', b'2000'), (b'1999', b'1999'), (b'1998', b'1998'), (b'1997', b'1997'), (b'1996', b'1996'), (b'1995', b'1995'), (b'1994', b'1994'), (b'1993', b'1993'), (b'1992', b'1992'), (b'1991', b'1991'), (b'1990', b'1990'), (b'1989', b'1989'), (b'1988', b'1988'), (b'1987', b'1987'), (b'1986', b'1986'), (b'1985', b'1985'), (b'1984', b'1984'), (b'1983', b'1983'), (b'1982', b'1982'), (b'1981', b'1981'), (b'1980', b'1980'), (b'1979', b'1979'), (b'1978', b'1978'), (b'1977', b'1977'), (b'1976', b'1976'), (b'1975', b'1975'), (b'1974', b'1974'), (b'1973', b'1973'), (b'1972', b'1972'), (b'1971', b'1971'), (b'1970', b'1970'), (b'1969', b'1969'), (b'1968', b'1968'), (b'1967', b'1967'), (b'1966', b'1966'), (b'1965', b'1965'), (b'1964', b'1964'), (b'1963', b'1963'), (b'1962', b'1962'), (b'1961', b'1961'), (b'1960', b'1960'), (b'1959', b'1959'), (b'1958', b'1958'), (b'1957', b'1957'), (b'1956', b'1956'), (b'1955', b'1955'), (b'1954', b'1954'), (b'1953', b'1953'), (b'1952', b'1952'), (b'1951', b'1951'), (b'1950', b'1950')], max_length=10, null=True)),
                ('resume', models.FileField(blank=True, default=b'/media/resume/resume2.pdf', null=True, upload_to=b'resume')),
                ('profile_photo', models.ImageField(blank=True, default=b'/static/images/default_profile_picture.png', null=True, upload_to=b'profile_photos')),
                ('address', models.TextField(blank=True, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=b'name', unique=True)),
                ('expected_ctc', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('profile_cover_pic', models.FileField(blank=True, default=b'/static/images/default_cover_picture.png', null=True, upload_to=b'profile_cover_pic')),
                ('about_me', models.TextField(blank=True, null=True)),
                ('mail_sent_to_preferred', models.NullBooleanField()),
                ('ready_to_relocate', models.NullBooleanField()),
                ('notice_period', models.IntegerField(blank=True, null=True)),
                ('corrected_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.CorrectedCity')),
                ('current_designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='designation.Designation')),
                ('current_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='location.City')),
                ('skills', taggit_autosuggest.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
